#import "raylib";
#import "Basic";

main :: () {
    set_working_directory(#filepath);

    // Initialization
    //--------------------------------------------------------------------------------------
    screenWidth  : s32 : 800;
    screenHeight : s32 : 450;

    InitWindow(screenWidth, screenHeight, "raylib [textures] example - texture from raw data");
    defer CloseWindow(); // Close window and OpenGL context

    // NOTE: Textures MUST be loaded after Window initialization (OpenGL context is required)

    // Load RAW image data (512x512, 32bit RGBA, no file header)
    fudesumiRaw: Image  = LoadImageRaw("resources/fudesumi.raw", 384, 512, .PIXELFORMAT_UNCOMPRESSED_R8G8B8A8, 0);
    fudesumi: Texture2D = LoadTextureFromImage(fudesumiRaw);  // Upload CPU (RAM) image to GPU (VRAM)
    defer UnloadTexture(fudesumi);    // Texture unloading

    UnloadImage(fudesumiRaw);                                 // Unload CPU (RAM) image data

    // Generate a checked texture by code
    width  : s32 = 960;
    height : s32 = 480;

    // Dynamic memory allocation to store pixels data (Color type)
    pixels: *Color = cast(*Color)alloc(width*height*size_of(Color));

    y: s32 = 0;
    while (y < height) {
        defer y += 1;

        x: s32 = 0;
        while (x < width) {
            defer x += 1;

            pixels[y*width + x] = ifx (((x/32+y/32)/1)%2 == 0) then ORANGE else GOLD;
        }
    }

    // Load pixels data into an image structure and create texture
    checkedIm: Image = .{
        data    = pixels,          // We can assign pixels directly to data
        width   = width,
        height  = height,
        format  = .PIXELFORMAT_UNCOMPRESSED_R8G8B8A8,
        mipmaps = 1
    };

    checked: Texture2D = LoadTextureFromImage(checkedIm); // TODO: this closes the app and does not work. needs investigation
    defer UnloadTexture(checked);     // Texture unloading

    UnloadImage(checkedIm);        // Unload CPU (RAM) image data (pixels)
    //--------------------------------------------------------------------------------------

    while (!WindowShouldClose()) { // Detect window close button or ESC key
        // Update
        //----------------------------------------------------------------------------------
        // Nothing to do
        //----------------------------------------------------------------------------------

        // Draw
        //----------------------------------------------------------------------------------
        BeginDrawing();
        defer EndDrawing();

        ClearBackground(RAYWHITE);

        DrawTexture(checked, screenWidth/2 - checked.width/2, screenHeight/2 - checked.height/2, Fade(WHITE, 0.5));
        DrawTexture(fudesumi, 430, -30, WHITE);

        DrawText("CHECKED TEXTURE ", 84, 85, 30, BROWN);
        DrawText("GENERATED by CODE", 72, 148, 30, BROWN);
        DrawText("and RAW IMAGE LOADING", 46, 210, 30, BROWN);

        DrawText("(c) Fudesumi sprite by Eiden Marsal", 310, screenHeight - 20, 10, BROWN);
        //----------------------------------------------------------------------------------
    }
}